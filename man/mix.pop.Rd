% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mix.pop.r
\name{mix.pop}
\alias{mix.pop}
\title{Generates mixed populuation}
\usage{
mix.pop(
  nb.inds,
  haplos,
  population = haplos@ped$population,
  tile.length = 20,
  kinship = FALSE,
  fraternity = FALSE,
  ...
)
}
\arguments{
\item{nb.inds}{number of (unrelated) individuals per 'deme'}

\item{haplos}{haplotype bed matrix}

\item{population}{vector giving the population of origin of each haplotype}

\item{kinship}{Logical. TRUE to get kinship matrix computed from IBD sharing.}

\item{fraternity}{Logical. TRUE to get fraternity matrix computed from IBD sharing.}

\item{...}{Additional parameters give the probability of drawing a tile in each population.}
}
\value{
a list width components `bed`, `kinship` and `fraternity` (if applicable).
The bed matrix will have extra columns in @ped giving the probabilities used for the deme of the individuals.
}
\description{
Generates mixed populuation
}
\details{
The number of 'demes' is given by the length of the vectors of probabilities.
There will be `nb.inds` individuals on each deme. `nb.inds` could be a vector giving 
different number of individuals for each deme.
}
\examples{
#' # installs KGH is not already installed
if(!require("KGH")) install.packages("KGH", repos="https://genostats.github.io/R/")
# loads a bed matrix of 1006 european haplotypes
filepath <- system.file("extdata", "1KG_haplos.bed", package = "KGH")
H <- read.bed.matrix(filepath)

# 100 individuals x 11 demes with different proportions of TSI / IBS
p <- seq(0, 1, length = 11)
x.1 <- mix.pop(100, H, TSI = p, IBS = 1 - p)
# let's do a quick PCA
z <- LD.thin(select.snps(x.1$bed, maf > 0.05), 0.1)
K <- GRM(z)
par(mfrow=c(1,2))
plot( eigen(K)$vectors, col = hsv(x.1$bed@ped$TSI) )

# to generate a mixture of 4 populations on a 11 x 11 square
f <- function(x,y) c( (1-y)*c(x, 1-x), y*c(x, 1-x))
N <- 11
t <- rep(seq(0,1,length=N), N); u <- rep(seq(0,1,length=N), each = N)
pp <- t(mapply(f, t, u))
x.2 <- mix.pop(10, H, TSI = pp[,1], IBS = pp[,2], CEU = pp[,3], FIN = pp[,4])
# PCA
z <- LD.thin(select.snps(x.2$bed, maf > 0.05), 0.1)
K <- GRM(z)
plot( eigen(K)$vectors, col = rgb(x.2$bed@ped$TSI, x.2$bed@ped$IBS, x.2$bed@ped$CEU) )
}
